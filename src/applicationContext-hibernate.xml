<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- JNDI方式配置数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="${jndiName}"></property> </bean> -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
<!-- 				<value>classpath:hibernate.properties</value> -->
				<value>hibernate.properties</value>
			</list>
		</property>
	</bean>
	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="connectProperties">  
       <props>  
           <prop key="password" >${jdbc_password}</prop>
       </props>  
   </property>
           <property name="url" value="${jdbc_url}"/>
           <property name="username" value="${jdbc_username}"/>

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- <property name="poolPreparedStatements" value="true" /> <property 
			name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="mergeStat" /> -->
		<property name="filters" value="stat" />
	</bean>

	<!-- 配置hibernate session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
				<prop key="hibernate.auto_commit">true</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.connection.isolation">1</prop>
			</props>
		</property>
		<!-- 自动扫描注解方式配置的hibernate类文件 -->
		<property name="packagesToScan">
			<list>
			    <value>com.cnpc.geo.web.front.common.model</value>
			    <value>com.cnpc.geo.web.front.exception.custom</value>
			    
				<value>com.cnpc.geo.web.admin.sysmanage.model</value> 
				<value>com.cnpc.geo.web.admin.environment.model</value>
				<!--
				<value>com.cnpc.geo.web.event.model</value>
				-->
				<value>com.cnpc.geo.web.admin.log.model</value>
				<!--
				<value>com.cnpc.geo.web.alarm.model</value>
				-->
				<value>com.cnpc.geo.web.admin.schedulejob.model</value>
				<value>com.cnpc.geo.web.admin.ingestmanage.model</value>
				<value>com.cnpc.geo.web.admin.restful.proxy.model</value>
				<value>com.cnpc.geo.web.admin.exception.custom</value>
				<value>com.cnpc.geo.web.admin.datasource.model</value>
				<value>com.cnpc.geo.web.admin.document.model</value>
				<value>com.cnpc.geo.web.admin.spider.model</value> 
				<!-- 告警监控 -->
				<value>com.cnpc.geo.web.admin.alarm.model</value>
				<!-- 前端页面 -->
				<value>com.cnpc.geo.web.front.search.model</value>
				<value>com.cnpc.geo.web.front.common.model</value> 
				
				<!-- 登录 -->
				<value>com.cnpc.geo.web.front.login.model</value>
				
				<!-- 敏感词接口 -->
				<value>com.cnpc.geo.web.admin.restful.model</value>
				<!-- 敏感词接口 -->
				<value>com.cnpc.geo.web.admin.cloudlist.model</value>
			</list>
		</property>
		<property name="annotatedClasses">
			<list>
			    <value>cnitsec.category.configuration.TDatastoreConfigurationInfo</value>
			    <value>cnitsec.category.configuration.THostConfigurationInfo</value>
			    <value>cnitsec.category.configuration.TNetworkConfigurationInfo</value>
			    <value>cnitsec.category.configuration.TVmConfigurationInfo</value>
			    <value>cnitsec.category.operating.TVmwareEvent</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 注解方式配置事物 <tx:annotation-driven transaction-manager="transactionManager" 
		/> -->

	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="upd*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="execute*" propagation="REQUIRED"/>
			<tx:method name="reset*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>

	
	<!-- 加载系统参数：容器启动时系统配置参数(搜索地址) -->	
	
	<!-- 加载定时任务：容器启动时自动加载20140812添加 songzhanliang 
	<bean id="scheduleJobConfig" class="com.cnpc.geo.base.init.ScheduleJobConfig">
		<constructor-arg index="0">
			<ref bean="scheduleJobService" />
		</constructor-arg>
		<constructor-arg index="1" type="java.lang.Boolean">
			<value>false</value>
		</constructor-arg>
	</bean>
	-->

   <bean id="tDatastoreConfigurationInfo" class="cnitsec.category.configuration.TDatastoreConfigurationInfo"></bean> 
    <bean id="tHostConfigurationInfo" class="cnitsec.category.configuration.THostConfigurationInfo"></bean> 
    <bean id="tNetworkConfigurationInfo" class="cnitsec.category.configuration.TNetworkConfigurationInfo"></bean> 
    <bean id="tVmConfigurationInfo" class="cnitsec.category.configuration.TVmConfigurationInfo"></bean> 
    <bean id="tVmwareEvent" class="cnitsec.category.operating.TVmwareEvent"></bean> 
    
    <bean id="myTrustManager" class="cnitsec.common.connection.MyTrustManager"  init-method="trustAll"></bean> 
    
    <bean id="basicConnection" class="cnitsec.common.connection.BasicConnection" init-method="connect">
    	<property name="url" value="https://192.168.101.33/sdk"></property>
    	<property name="username" value="administrator@vsphere.local"></property>
    	<property name="password" value="Yaxin123!"></property>
    </bean>
    
    <bean id="getEvents" class="cnitsec.category.operating.GetEvents">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    	<property name="con" ref="basicConnection"></property>
    	<property name="getConfigurationInfo" ref="getConfigurationInfo"></property>
    </bean>
    
    <bean id="getPerformanceData" class="cnitsec.category.monitoring.GetPerformanceData">
    	<property name="con" ref="basicConnection"></property>
    </bean>
    
    <bean id="getConfigurationInfo" class="cnitsec.category.configuration.GetConfigurationInfo" init-method ="initAllTables">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    	<property name="con" ref="basicConnection"></property>
    </bean> 
</beans>
